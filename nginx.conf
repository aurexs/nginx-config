# Inspirado en nginxconfig.io y https://medium.com/@mvuksano/how-to-properly-configure-your-nginx-for-tls-564651438fe0

user nginx;
pid /run/nginx.pid;
worker_processes auto;
worker_rlimit_nofile 65535;  # rmate /usr/lib/systemd/system/nginx.service  agregar: LimitNOFILE=30000
pcre_jit on;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
# include /usr/share/nginx/modules/*.conf;
# include modules/mod-stream.conf
# include modules/mod-http-image-filter.conf
# include modules/mod-http-perl.conf
# include modules/mod-http-xslt-filter.conf
# include modules/mod-mail.conf

# load_module "modules/ngx_http_brotli_filter_module.so";
# load_module "modules/ngx_http_brotli_static_module.so";
# load_module "modules/ngx_http_echo_module.so";
# #load_module "modules/ngx_http_fancyindex_module.so";
# load_module "modules/ngx_http_geoip_module.so";
# load_module "modules/ngx_http_headers_more_filter_module.so";
# load_module "modules/ngx_http_image_filter_module.so";
# #load_module "modules/ngx_http_js_module.so";
# #load_module "modules/ngx_http_naxsi_module.so";
# load_module "modules/ngx_http_passenger_module.so";
# #load_module "modules/ngx_http_perl_module.so";
# load_module "modules/ngx_http_vhost_traffic_status_module.so";
# #load_module "modules/ngx_http_xslt_filter_module.so";
# #load_module "modules/ngx_stream_js_module.so";

events {
	# use epoll;
	multi_accept on;
	worker_connections 65535;
}

http {
    # Metricas de hosts
    # vhost_traffic_status_zone;
    # vhost_traffic_status_dump /var/log/nginx/vts.db;

	charset utf-8;
	server_tokens off;
	log_not_found off;
	# types_hash_bucket_size 512;
	types_hash_max_size 2048;
	server_names_hash_bucket_size 64;
	server_names_hash_max_size 2048;

    # https://thoughts.t37.net/nginx-optimization-understanding-sendfile-tcp-nodelay-and-tcp-nopush-c55cdd276765
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;

	# logging
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    log_format web_nginx_access '$http_host $remote_addr [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" $request_time $upstream_response_time $upstream_status';
    access_log /var/log/nginx/access.log web_nginx_access;
	error_log  /var/log/nginx/error.log warn;

	# limits
	limit_req_log_level warn;
	limit_req_zone $binary_remote_addr zone=auth:10m rate=6r/s;
	# limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;

	# client
	client_max_body_size 100M;
    reset_timedout_connection on;   # allow the server to close connection on non responding client, this will free up memory
    client_body_timeout 15;         # request timed out -- default 60
    send_timeout 10;                # if client stop responding, free up memory -- default 60
    keepalive_timeout 30;           # server will close connection after this time -- default 75

	# DESHABILITADO MIENTRAS SE HACEN PRUEBAS DE DEBUG
	# HABILITAR CUANDO YA TODO ESTE OK
	# --------------------------
	# cache informations about FDs, frequently accessed files
	# can boost performance, but you need to test those values
	#open_file_cache max=200000 inactive=20s;
	#open_file_cache_valid 30s;
	#open_file_cache_min_uses 2;
	#open_file_cache_errors on;

	# Para estaticos poner valores muy altos pues no cambian y se descachean por cambio de version (.min.v2.js)
	#open_file_cache max=200000 inactive=1h;
	#open_file_cache_valid 1h;

	# MIME
	include mime.types;
	default_type application/octet-stream;
	index index.html index.htm index.php;
    
    # gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/xsd text/xsl application/json application/javascript application/rss+xml application/atom+xml image/svg+xml font/truetype font/opentype;

    # brotli
    brotli on;
    brotli_comp_level 6;
    brotli_types text/plain text/css text/xml text/xsd text/xsl application/json application/javascript application/rss+xml application/atom+xml image/svg+xml font/truetype font/opentype;

	# SSL
	ssl_session_timeout 12h;
	ssl_session_cache shared:SSL:40m;
	ssl_session_tickets off;

	# Diffie-Hellman parameter for DHE ciphersuites
	# mkdir /etc/nginx/ssl && openssl dhparam 2048 -out /etc/nginx/ssl/dhparam.pem
	ssl_dhparam /etc/nginx/ssl/dhparam.pem;

	# Mozilla Intermediate configuration
	ssl_protocols TLSv1.2 TLSv1.3;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    # ssl_ecdh_curve              X25519:P-256:P-384:P-224:P-521;
	# ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;  # More secure and less CPU tasking ciphers compared to nginx defaults


	# OCSP Stapling: http://blog.commando.io/ssl-ocsp-stapling-with-nginx/
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/nginx/ssl/lets-encrypt-x3-cross-signed.pem;  # Si solo se tienen certs de letsencrypt
	# ssl_trusted_certificate /etc/pki/tls/certs/ca-bundle.crt;                 # Para todos los certs raiz

	# DNS Cada 3min vuelve a checar DNS para cambios de IP
	resolver 192.168.0.2 192.100.162.1 1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 valid=180s;
	resolver_timeout 2s;

    # Ignorar ciertos UAs en los logs al hacer pruebas de carga
    # Luego ApacheBench genera toneladas de logs de accesos
    map $http_user_agent $ignore_ua {
        default                 0;
        "~raintank.*"           1;
        "~weighttp.*"           1;
        "~ApacheBench.*"        1;
        "~Pingdom.*"            1;
        "~Sensu-HTTP-Check.*"   1;
        "~wrk.*"                1;
        "raintank collector"    1;
    }

    ## Headers seguridad
    ## ------------------
    add_header X-Content-Type-Options nosniff;
	# Las siguientes se agregan por location
    #add_header X-Frame-Options SAMEORIGIN;
    #add_header X-XSS-Protection "1; mode=block";


	# load configs
	include /etc/nginx/conf.d/*.conf;
}