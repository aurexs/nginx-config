# secure_link module
# echo -n '/r/100x100/logo.png Pass11W1TBRm0YwBN' | openssl md5 -binary | openssl base64 | tr +/ -_ | tr -d =


#TODO: Implementar limit_req
#TODO: Cambiar calidad de imagen segun tamaño

proxy_cache_path /usr/local/var/cache/nginx/images levels=1:2 keys_zone=resizedimages:10M inactive=60d max_size=1G;
# proxy_cache_path /var/cache/nginx/images levels=1:2 keys_zone=resizedimages:10M inactive=60d max_size=1G;

server {
    # listen 80;
    server_name         i.piida.uan.xxx;
    listen 443 ssl http2;
    ssl_certificate     ssl/_wildcard.uan.xxx+8.pem;
    ssl_certificate_key ssl/_wildcard.uan.xxx+8-key.pem;

    root /Users/aurex/Sites/uan.piida.web.plantilla/html;

    access_log off;
    error_log  /var/log/nginx/piida.uan-error.log error;

    # https://i.piida.uan.xxx/r/100x100/logo.png?hash=tGUP3guVsGdnir6O-FuJyQ
    #location /r {
    location ~ ^/(?:r|c)/(\d+)(x\d+)?(q\d+)?/(.*)\.(jpg|jpeg|png|gif)$ {
        # secure_link $arg_hash;  
        # secure_link_md5 "$uri Pass11W1TBRm0YwBN;
        # if ($secure_link = "") {
        #   return 404;
        # }

        #TODO: Implementar limit_req

        proxy_cache resizedimages;
        # proxy_cache_key "$host$document_uri";
        proxy_cache_lock on;
        proxy_cache_valid 30d;  
        proxy_cache_use_stale error timeout invalid_header updating;
        proxy_pass http://unix:/var/run/nginx-resizeimages.sock;
        # proxy_pass http://localhost:11337;
        expires 30d;
    }

    # Access denied.
    location / {
        return 403;
    }
}

server {
    # error_log  /var/log/nginx/resizator.local.error.log error;

    # listen 11337;
    # server_name localhost;

    # Metodo 1: Proxy con Backend externo (o local en otro subdominio)
    # set $backend 's3.eu-central-1.amazonaws.com/bucket-name';
    # resolver 192.100.162.1 1.1.1.1 8.8.8.8 valid=300s;
    # resolver_timeout 5s;
    # NGINX necesita una definición explícita para resolver DNS cuando se usan variables en proxy_pass, como $backend.
    #   sino, podría lanzar un error 'no resolver defined to resolve localhost' y un 415 Unsuported media type.

    # proxy_buffering off;
    # proxy_pass_request_body off; 
    # proxy_pass_request_headers off;

    # proxy_hide_header "x-amz-id-2";
    # proxy_hide_header "x-amz-request-id";
    # proxy_hide_header "x-amz-storage-class";
    # proxy_hide_header "Set-Cookie";
    # proxy_ignore_headers "Set-Cookie";
    # proxy_set_header Host $backend;


    # Metodo 2: Si esta en el mismo server, usar alias (y proxy)
    listen unix:/var/run/nginx-resizeimages.sock;
    set $root_path '/Users/aurex/Sites/uan.piida.web.plantilla/html';  # <- Sin / al final

    image_filter_buffer 10M;      # Tamaño máximo de una imagen a procesar
    image_filter_interlace on;
    image_filter_jpeg_quality 90;

    # /r/100x100/logo.png
    location ~ ^/r/(?<width>\d+)x(?<height>\d+)(?:q(?<quality>\d+))?/(?<name>.*)$ {
        image_filter resize $width $height;
        #proxy_pass https://$backend/$name; # Metodo 1
        alias $root_path/$name;             # Metodo 2
    }

    # /r/320/logo.png
    location ~ ^/r/(?<width>\d+)(?:q(?<quality>\d+))?/(?<name>.*)$ {
        image_filter resize $width -;
        #proxy_pass https://$backend/$name; # Metodo 1
        alias $root_path/$name;             # Metodo 2
    }

    # /c/100x100/logo.png
    location ~ ^/c/(?<width>\d+)x(?<height>\d+)(?:q(?<quality>\d+))?/(?<name>.*)$ {
        image_filter crop $width $height;
        #proxy_pass https://$backend/$name; # Metodo 1
        alias $root_path/$name;             # Metodo 2
    }

  # TODO. Cambiar calidad segun tamaño
  #  Tamaño   Calidad
  #   >1200 = 25   3x  1440
  #    >600 = 51   2x  960
  #   <=600 = 85   1x  480
}